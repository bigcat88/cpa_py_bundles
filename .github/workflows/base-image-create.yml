name: Base Image Create

on:
  workflow_dispatch:

concurrency:
  group: create-base-img
  cancel-in-progress: true

jobs:

  manylinux:
    name: ManyLinux • ${{ matrix.build_arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        build_arch: [ "arm64", "amd64", "arm/v7" ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ARM64 prepare
        if: matrix.build_arch == 'arm64'
        run: |
          echo BASE_DOCKER_FILE="docker/manylinux64.Dockerfile" >> $GITHUB_ENV
          echo BASE_IMG_NAME="base-manylinux-arm64" >> $GITHUB_ENV

      - name: AMD64 prepare
        if: matrix.build_arch == 'amd64'
        run: |
          echo BASE_DOCKER_FILE="docker/manylinux64.Dockerfile" >> $GITHUB_ENV
          echo BASE_IMG_NAME="base-manylinux-amd64" >> $GITHUB_ENV

      - name: ARM7 prepare
        if: matrix.build_arch == 'arm/v7'
        run: |
          echo BASE_DOCKER_FILE="docker/manylinux.Dockerfile" >> $GITHUB_ENV
          echo BASE_IMG_NAME="base-manylinux-arm7" >> $GITHUB_ENV

      - name: Cache Base Image
        uses: actions/cache@v3
        id: base-manylinux
        with:
          path: /tmp/.cache-base
          key: ${{ matrix.build_arch }}-base-${{ hashFiles( env.BASE_DOCKER_FILE ) }}

      - name: Create Cache Dir
        if: steps.base-manylinux.outputs.cache-hit != 'true'
        run: mkdir /tmp/.cache-base

      - name: Build Base Image
        if: steps.base-manylinux.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/${{ matrix.build_arch }}
          push: false
          tags: base-manylinux-${{ matrix.build_arch }}:latest
          file: ${{ env.BASE_DOCKER_FILE }}
          outputs: type=docker,dest=/tmp/.cache-base/${{ env.BASE_IMG_NAME }}.tar

      - name: Debug Step
        run: ls -la /tmp/.cache-base/

#  musllinux64:
#    name: MuslLinux • ${{ matrix.build_arch }}
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: true
#      matrix:
##        build_arch: [ "arm64", "amd64" ]
#        build_arch: [ "amd64" ]
#
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v2
#
#      - name: Setup Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Cache Base Image
#        uses: actions/cache@v3
#        id: base-musllinux
#        with:
#          path: /tmp/.cache-base
#          key: ${{ matrix.build_arch }}-base-${{ hashFiles('docker/musllinux64.Dockerfile') }}
#
#      - name: Create Cache Dir
#        if: steps.base-musllinux.outputs.cache-hit != 'true'
#        run: mkdir /tmp/.cache-base
#
#      - name: Build Base Image
#        if: steps.base-musllinux.outputs.cache-hit != 'true'
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          platforms: linux/${{ matrix.build_arch }}
#          push: false
#          tags: base-musllinux-${{ matrix.build_arch }}:latest
#          file: docker/musllinux64.Dockerfile
#          outputs: type=docker,dest=/tmp/.cache-base/base-musllinux-${{ matrix.build_arch }}.tar
#
#      - name: Debug Step
#        run: ls -la /tmp/.cache-base/
