name: dev

on:

env:
  APP_NAME: cloud_py_api

jobs:

  tests-mysql-socket:
    needs: [analysis]
    runs-on: ubuntu-22.04
    name: ${{ matrix.nextcloud }} • MySQL • socket
    if: "!contains(github.event.head_commit.message, '[docs]')"
    strategy:
      fail-fast: false
      matrix:
        nextcloud: [ "25.0.2" ]

    steps:
      - name: Set up php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, fileinfo, intl, pdo_mysql, zip, gd

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: cache-nextcloud
        id: nextcloud_setup
        uses: actions/cache@v3
        with:
          path: nextcloud-${{ matrix.nextcloud }}.tar.bz2
          key: ${{ matrix.nextcloud }}

      - name: Download Nextcloud
        if: steps.nextcloud_setup.outputs.cache-hit != 'true'
        run: wget -q https://download.nextcloud.com/server/releases/nextcloud-${{ matrix.nextcloud }}.tar.bz2

      - name: Set up Nextcloud
        run: |
          sudo systemctl start mysql.service
          cat /etc/mysql/my.cnf
          ls -la /var/run/mysqld/mysqld.sock
          error
          tar -xjf nextcloud-${{ matrix.nextcloud }}.tar.bz2 --strip-components 1
          mkdir data
          php occ maintenance:install --verbose --database=mysql --database-name=nextcloud \
          --database-host=127.0.0.1 --database-user=root --database-pass=rootpassword \
          --admin-user admin --admin-pass adminpassword
          php occ config:system:set debug --value=true --type=boolean
          php -S localhost:8080 &

      - uses: actions/checkout@v3
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Enable App & Test Data
        run: |
          php occ app:enable ${{ env.APP_NAME }}
          cp -R apps/${{ env.APP_NAME }}/tests/nc_py_api/test_dir ./data/admin/files/
          php occ files:scan admin

      - name: Generate coverage report
        working-directory: apps/${{ env.APP_NAME }}
        run: |
          python3 -m pip -v install ".[dev]"
          coverage run -m pytest -s && coverage xml && coverage html
        env:
          SERVER_ROOT: "../.."
          CPA_LOGLEVEL: debug

      - name: HTML coverage to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: coverage_${{ matrix.nextcloud }}_8.0_mysql_socket
          path: apps/${{ env.APP_NAME }}/htmlcov
          if-no-files-found: error

      - name: Upload report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: apps/${{ env.APP_NAME }}/coverage.xml
          fail_ci_if_error: true
          verbose: true
